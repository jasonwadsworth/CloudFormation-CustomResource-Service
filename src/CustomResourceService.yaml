AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Custom Resource as a Service
Parameters:
  Bucket:
    Type: String
    Description: The S3 bucket that holds the deployment artifacts
  StartFunctionBucketKey:
    Type: String
    Description: The S3 bucket key for the start function
  CallEndpointFunctionBucketKey:
    Type: String
    Description: The S3 bucket key for the call endpoint function
  ResponseFunctionBucketKey:
    Type: String
    Description: The S3 bucket key for the response function

Resources:
  # Queue for failed messages
  # TODO: we should add a subscription to this to the response lambda and make sure that lambda can handle this payload so it can report an error
  CloudFormationCustomResourceServiceDeliveryFailureQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: CloudFormation-CustomResourceService-DeliveryFailure

  # CloudFormationCustomResourceServiceDeliveryFailureQueueAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmActions:
  #       - sns
  #     AlarmDescription: Alarm for CloudFormation custom resource delivery failure
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #       - Name: QueueName
  #         Value : { "Fn::GetAtt" : [ "CloudFormationCustomResourceServiceDeliveryFailureQueue", "QueueName"] }
  #     EvaluationPeriods: 2
  #     MetricName: ApproximateNumberOfMessagesVisible
  #     Namespace: AWS/SQS
  #     Period: 1
  #     Statistic: Sum
  #     Threshold: 0
  #     TreatMissingData: notBreaching

  # Permission for SNS to send dead letters to the failure queue
  CustomResourceDeliveryFailureQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt CloudFormationCustomResourceServiceDeliveryFailureQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref CloudFormationCustomResourceServiceSnsTopic
      Queues:
        - !Ref CloudFormationCustomResourceServiceDeliveryFailureQueue

  CloudFormationCustomResourceServiceSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CloudFormation-CustomResourceService
      DisplayName: CloudFormation Custom Resource Service Sns Topic

  CloudFormationCustomResourceServiceSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref CloudFormationCustomResourceServiceSnsTopic
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'sns:Publish'
            Resource:
              - !Ref CloudFormationCustomResourceServiceSnsTopic

  # This policy gives the start function permission to call the state machine
  CloudFormationCustomResourceServiceStartPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub CloudFormation-CustomResourceService-StartFunction-${AWS::Region}
      Description: Policy for the state machine
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'states:StartExecution'
            Effect: Allow
            Resource:
              - !Ref StateMachine
          - Action:
              - sqs:SendMessage
            Effect: Allow
            Resource:
              - !GetAtt CloudFormationCustomResourceServiceDeliveryFailureQueue.Arn

  CloudFormationCustomResourceServiceStartRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'CloudFormation-CustomResourceService-StartFunction-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref CloudFormationCustomResourceServiceStartPolicy
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # This function starts the state machine
  CloudFormationCustomResourceServiceStartFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CloudFormation-CustomResourceService-Start
      DeadLetterConfig:
        TargetArn: !GetAtt CloudFormationCustomResourceServiceDeliveryFailureQueue.Arn
      Description: CloudFormation Custom Resource Service Start
      Runtime: nodejs10.x
      Role: !GetAtt CloudFormationCustomResourceServiceStartRole.Arn
      Handler: index.handler
      Environment:
        Variables:
          StateMachineArn: !Ref StateMachine
      Code:
        S3Bucket: !Ref Bucket
        S3Key: !Ref StartFunctionBucketKey

  # This permission allows SNS to invoke the lambda
  CloudFormationCustomResourceServiceStartFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CloudFormationCustomResourceServiceStartFunction.Arn
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref CloudFormationCustomResourceServiceSnsTopic

  # This subscription will trigger the start lambda when messages are published to the SNS topic
  CloudFormationCustomResourceServiceStartFunctionSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CloudFormationCustomResourceServiceStartFunction.Arn
      Protocol: lambda
      TopicArn: !Ref CloudFormationCustomResourceServiceSnsTopic
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt CloudFormationCustomResourceServiceDeliveryFailureQueue.Arn

  # This policy grants the call endpoint function permission to call the lambda
  # TODO: need to make a change that drives this permission differently if this is going to run globally
  CloudFormationCustomResourceServiceCallEndpointPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub CloudFormation-CustomResourceService-CallEndpoint-${AWS::Region}
      Description: Policy for the call endpoint function
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - arn:aws:lambda:us-west-2:875285909177:function:test
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/CustomResourceService-*

  CloudFormationCustomResourceServiceCallEndpointRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'CloudFormation-CustomResourceService-CallEndpoint-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Ref CloudFormationCustomResourceServiceCallEndpointPolicy

  # This function calls the endpoint lambda
  CloudFormationCustomResourceServiceCallEndpointFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CloudFormation-CustomResourceService-CallEndpoint
      Description: CloudFormation Custom Resource Service Call Endpoint
      Runtime: nodejs10.x
      Role: !GetAtt CloudFormationCustomResourceServiceCallEndpointRole.Arn
      Handler: index.handler
      Code:
        S3Bucket: !Ref Bucket
        S3Key: !Ref CallEndpointFunctionBucketKey

  CloudFormationCustomResourceServiceResponsePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub CloudFormation-CustomResourceService-Response-${AWS::Region}
      Description: Policy for the response function
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource:
              - !GetAtt CloudFormationCustomResourceServiceDeliveryFailureQueue.Arn

  CloudFormationCustomResourceServiceResponseRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'CloudFormation-CustomResourceService-Response-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Ref CloudFormationCustomResourceServiceResponsePolicy

  # This function reports the response back to CloudFormation by putting a response file in S# using the signed URL
  CloudFormationCustomResourceServiceResponseFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CloudFormation-CustomResourceService-Response
      Description: CloudFormation Custom Resource Service Response
      Runtime: nodejs10.x
      Role: !GetAtt CloudFormationCustomResourceServiceResponseRole.Arn
      Handler: index.handler
      Code:
        S3Bucket: !Ref Bucket
        S3Key: !Ref ResponseFunctionBucketKey

  CloudFormationCustomResourceServiceResponseFunctionEventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      Enabled: true
      EventSourceArn: !GetAtt CloudFormationCustomResourceServiceDeliveryFailureQueue.Arn
      FunctionName: !GetAtt CloudFormationCustomResourceServiceResponseFunction.Arn

  # Role for the state machine.
  CloudFormationCustomResourceServiceStateMachineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub CloudFormation-CustomResourceService-StateMachine-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref CloudFormationCustomResourceServiceStateMachinePolicy
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # This policy gives the state machine permission to call the lambda functions and the failure SNS topic
  CloudFormationCustomResourceServiceStateMachinePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub CloudFormation-CustomResourceService-StateMachine-${AWS::Region}
      Description: Policy for the state machine
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - !GetAtt CloudFormationCustomResourceServiceCallEndpointFunction.Arn
              - !GetAtt CloudFormationCustomResourceServiceResponseFunction.Arn
          - Action:
              - sns:Publish
            Effect: Allow
            Resource:
              - !Ref CloudFormationCustomResourceServiceResponseFailedSnsTopic

  # this topic is used for notifications on failures when setting the response. these failures are
  # critical because someone's CloudFormation will not complete until the response is written.
  CloudFormationCustomResourceServiceResponseFailedSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CloudFormation-CustomResourceService-ResponseFailed
      DisplayName: Custom resource service response failed

  # this state machine calls a lambda to perform the custom resource action, passing in all the
  # information supplied by the custom resource. the lambda will call the endpoint repeatedly (with
  # a 15 second delay) until the endpoint returns a success/failure of the custom resource or the
  # process times out. at that point it will call another lambda to return a response to the
  # presigned URL supplied by the custom resource call. if that call fails a message will be sent
  # to the SNS topic to notify of a failure to respond.
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: CloudFormation-CustomResourceService-StateMachine
      RoleArn: !GetAtt CloudFormationCustomResourceServiceStateMachineRole.Arn
      DefinitionString: !Sub |-
        <STATE_MACHINE>
Outputs:
  CloudFormationCustomResourceServiceSnsTopic:
    Description: CloudFormation Custom Resource Service Sns Topic
    Value: !Ref CloudFormationCustomResourceServiceSnsTopic
